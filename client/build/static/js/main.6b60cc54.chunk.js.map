{"version":3,"sources":["images/RandomIcons/hand.svg","images/SocialMediaIcons/GithubIcon.svg","images/SocialMediaIcons/LinkedinIcon.svg","images/SocialMediaIcons/YoutubeIcon.svg","images/SocialMediaIcons/TwitterIcon.svg","images/layers.svg","images/MyFace.jpg","images/SkillsSetIcons/JSIcon.svg","images/SkillsSetIcons/ReactIcon.svg","images/SkillsSetIcons/ReduxIcon.svg","images/SkillsSetIcons/MySqlIcon.svg","images/SkillsSetIcons/NodeIcon.svg","images/SkillsSetIcons/AdobeXDIcon.svg","images/HomeIcon.svg","images/AboutIcon.svg","images/PortfolioIcon.svg","images/RandomIcons/colony.svg","images/RandomIcons/network.svg","images/RandomIcons/project-management.svg","images/RandomIcons/start-up.svg","store/reducers/emailMessage.js","store/constants/actionTypes.js","store/reducers/combineReducers.js","store/store.js","components/Heading/Heading.js","containers/HomeScreen/HomeScreen.js","components/InvalidRoute/InvalidRoute.js","containers/ProjectScreen/ProjectScreen.js","containers/AboutScreen/AboutScreen.js","components/SideNavbar/SideNavbar.js","components/Project/Project.js","containers/PortfolioScreen/PortfolioScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","intialState","email","subject","message","emailMessage","state","action","type","Object","assign","combineReducers","store","createStore","WebApp","window","__REDUX_DEVTOOLS_EXTENSION__","Heading","props","ref","reference","className","href","target","rel","src","GithubIcon","alt","LinkedinIcon","YoutubeIcon","TwitterIcon","HomeScreen","Layers","Component","InvalidRoute","style","color","marginTop","paddingTop","height","push","to","ProjectScreen","match","projectName","projectContributors","params","name","projectData","data","JSON","parse","localStorage","getItem","this","setState","projectDesc","numOfFavorites","languages","srcLink","AboutScreen","MyFace","JSIcon","ReactIcon","ReduxIcon","MySqlIcon","NodeIcon","AdobeXDIcon","SideNavbar","activeClassName","exact","HomeIcon","AboutIcon","PortfolioIcon","Project","Math","floor","random","image1","image2","image4","image5","image6","getBlockComponent","about","PortfolioScreen","projects","projectsData","axios","get","res","setItem","stringify","i","project","projectRoute","description","watchers_count","language","html_url","projectJSX","onClick","changeProjectData","length","map","index","key","App","path","component","Boolean","location","hostname","rootElement","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b60cc54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hand.2bee6d4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/GithubIcon.d0905453.svg\";","module.exports = __webpack_public_path__ + \"static/media/LinkedinIcon.9afa1353.svg\";","module.exports = __webpack_public_path__ + \"static/media/YoutubeIcon.19da854b.svg\";","module.exports = __webpack_public_path__ + \"static/media/TwitterIcon.4843dabb.svg\";","module.exports = __webpack_public_path__ + \"static/media/layers.5aae5537.svg\";","module.exports = __webpack_public_path__ + \"static/media/MyFace.dddc4114.jpg\";","module.exports = __webpack_public_path__ + \"static/media/JSIcon.c69727e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/ReactIcon.6e32ccc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ReduxIcon.a438a8d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/MySqlIcon.da15bf6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/NodeIcon.e5800bf2.svg\";","module.exports = __webpack_public_path__ + \"static/media/AdobeXDIcon.5e8bf2d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/HomeIcon.ef96f477.svg\";","module.exports = __webpack_public_path__ + \"static/media/AboutIcon.accefda3.svg\";","module.exports = __webpack_public_path__ + \"static/media/PortfolioIcon.de948ef5.svg\";","module.exports = __webpack_public_path__ + \"static/media/colony.5dddcc1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/network.1ad2ff0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/project-management.214cae9a.svg\";","module.exports = __webpack_public_path__ + \"static/media/start-up.fbecda65.svg\";","import {\n  SAVE_EMAIL,\n  SAVE_SUBJECT,\n  SAVE_MESSAGE,\n  CLEAR_EMAIL_FORM,\n} from '../constants/actionTypes';\n/* Intial States */\nconst intialState = {\n  email: '',\n  subject: '',\n  message: '',\n};\n\nconst emailMessage = (state = intialState, action) => {\n  switch (action.type) {\n    case SAVE_EMAIL:\n      return Object.assign({}, state, {\n        email: action.email,\n        subject: state.subject,\n        message: state.message,\n      });\n    case SAVE_SUBJECT:\n      return Object.assign({}, state, {\n        email: state.email,\n        subject: action.subject,\n        message: state.message,\n      });\n    case SAVE_MESSAGE:\n      return Object.assign({}, state, {\n        email: state.email,\n        subject: state.subject,\n        message: action.message,\n      });\n    case CLEAR_EMAIL_FORM:\n      return intialState;\n    default:\n      return state;\n  }\n};\n\nexport default emailMessage;\n","/*Action Types*/\n\nexport const SAVE_EMAIL = \"SAVE_EMAIL\";\nexport const SAVE_SUBJECT = \"SAVE_SUBJECT\";\nexport const SAVE_MESSAGE = \"SAVE_MESSAGE\";\nexport const CLEAR_EMAIL_FORM = \"CLEAR_EMAIL_FORM\";\n\nexport const CHANGE_PORTFOLIO_STATE = \"CHANGE_PORTFOLIO_STATE\";\n\nexport const CHANGE_HEADING_SIZE = \"CHANGE_HEADING_SIZE\";\nexport const RESET_HEADING_SIZE = \"RESET_HEADING_SIZE\";\nexport const CLOSE_PORTFOLIO = \"CLOSE_PORTFOLIO\";\n\nexport const EXPAND_PORTFOLIO_DIV = \"EXPAND_PORTFOLIO_DIV\";\n\n","import { combineReducers } from 'redux';\nimport emailMessage from './emailMessage';\n\nexport default combineReducers({\n emailMessage,\n});\n","import { createStore } from 'redux';\nimport WebApp from './reducers/combineReducers';\n\n// Takes care of the dataflow from actions dispatched to store to reducers\nconst store = createStore(\n  WebApp, /* preloadedState, */\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from 'react';\nimport './Heading.scss';\nimport GithubIcon from '../../images/SocialMediaIcons/GithubIcon.svg';\nimport LinkedinIcon from '../../images/SocialMediaIcons/LinkedinIcon.svg';\nimport YoutubeIcon from '../../images/SocialMediaIcons/YoutubeIcon.svg';\nimport TwitterIcon from '../../images/SocialMediaIcons/TwitterIcon.svg'\nconst Heading = props => (\n  <div ref={props.reference} className=\"heading\">\n    <h1>Hasham</h1>\n    <h1>Alam</h1>\n    <h3>Software Engineer</h3>\n    <div className=\"contactBar\">\n      <a\n        href=\"https://github.com/hasham7861\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img src={GithubIcon} alt=\"Github Icon\" />\n      </a>\n      <a\n        href=\"https://www.linkedin.com/in/hasham7861/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img src={LinkedinIcon} alt=\"Linkedin Icon\" />\n      </a>\n      <a\n        href=\"https://www.youtube.com/c/bleakCode\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img src={YoutubeIcon} alt=\"Youtube Icon\" />\n      </a>\n      <a\n        href=\"https://twitter.com/alamhash\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img src={TwitterIcon} alt=\"Twitter Icon\" />\n      </a>\n\n    </div>\n  </div>\n);\n\nexport default Heading;\n","import React, { Component } from 'react';\nimport './HomeScreen.scss';\nimport Heading from '../../components/Heading/Heading';\nimport Layers from '../../images/layers.svg';\n\nclass HomeScreen extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <img className=\"HomeIcon\" src={Layers} alt=\"splash page icon\"></img>\n        <Heading/>\n      </div>\n    );\n  }\n}\n\nexport default HomeScreen;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nconst InvalidRoute = () => (\n  <div>\n    <h1\n      style={{\n        color: 'white',\n        marginTop: 0,\n        paddingTop: '20px',\n        height: '100vh',\n      }}\n    >\n      <Redirect push to=\"/\"/>\n    </h1>\n  </div>\n);\n\nexport default InvalidRoute;\n","import React, { Component } from 'react';\nimport './ProjectScreen.scss';\n\nclass ProjectScreen extends Component {\n\n  projectName = '';\n  projectContributors = 'Hasham Alam';\n\n  constructor({ props, match }) {\n    super(props);\n    this.projectName = match.params.name;\n    this.state ={\n      projectData :{}\n    }\n  }\n\n  componentDidMount(){\n    const data = JSON.parse(localStorage.getItem('projectData'));\n\n    this.setState(\n      {\n        projectData:{\n          projectName: data.projectName,\n          projectDesc: data.projectDesc,\n          numOfFavorites:data.numOfFavorites,\n          languages:data.languages,\n          srcLink:data.srcLink \n        },\n      },\n    \n      )\n  }\n\n  render() {\n   \n    return (\n      <>\n        <div className=\"ProjectScreen\">\n          <h1 className=\"header\">{this.projectName}</h1>\n          <section className=\"Description\">\n            <h3>Description</h3>\n            <p>{this.state.projectData.projectDesc}</p>\n          </section>\n          <section className=\"Languages\">\n            <h3>Language</h3>\n            <p>{this.state.projectData.languages}</p>\n          </section>\n          <section className=\"Contributors\">\n            <h3>Author</h3>\n            <p>Hasham Alam</p>\n          </section>\n          <section>\n            <a href={this.state.projectData.srcLink}>\n              Click here for more details\n            </a>\n          </section>\n        </div>\n      </>\n    );\n  }\n}\n\n\nexport default ProjectScreen;\n","import React, { Component } from 'react';\nimport './AboutScreen.scss';\nimport MyFace from '../../images/MyFace.jpg';\nimport JSIcon from '../../images/SkillsSetIcons/JSIcon.svg';\nimport ReactIcon from '../../images/SkillsSetIcons/ReactIcon.svg';\nimport ReduxIcon from '../../images/SkillsSetIcons/ReduxIcon.svg';\nimport MySqlIcon from '../../images/SkillsSetIcons/MySqlIcon.svg';\nimport NodeIcon from '../../images/SkillsSetIcons/NodeIcon.svg';\nimport AdobeXDIcon from '../../images/SkillsSetIcons/AdobeXDIcon.svg';\n// import MyResumePdf from '../../documents/Hasham_Alam_Resume.pdf';\n\nclass AboutScreen extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"AboutScreen\">\n          <div className=\"MyFace\">\n            <img src={MyFace} alt=\"My Face\" />\n            <h1>HASHAM ALAM</h1>\n          </div>\n         \n          <div className=\"Info\">\n          <section>\n            <h3>Area of Expertise</h3>\n            <p>Full Stack Developer</p>\n          </section>\n          <section>\n            <h3>What I have to Offer</h3>\n            <p>Will create scalable web & mobile apps for your business</p>\n          </section>\n          <section>\n            <h3>Skills</h3>\n            <div className=\"SkillsIconBar\">\n              <img src={JSIcon} alt=\"JavaScript Icon\" />\n              <img src={ReactIcon} alt=\"React Icon\" />\n              <img src={ReduxIcon} alt=\"Redux Icon\" />\n              <img src={MySqlIcon} alt=\"MySql Icon\" />\n              <img src={NodeIcon} alt=\"Node Icon\" />\n              <img src={AdobeXDIcon} alt=\"AdobeXd Icon\" />\n            </div>\n          </section>\n          </div>\n        </div>\n        \n      </>\n    );\n  }\n}\n\nexport default AboutScreen;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './SideNavbar.scss';\nimport HomeIcon from '../../images/HomeIcon.svg';\nimport AboutIcon from '../../images/AboutIcon.svg';\nimport PortfolioIcon from '../../images/PortfolioIcon.svg';\n\n\nconst SideNavbar = () => (\n  <div className=\"SideNavbar\">\n    <NavLink to=\"/\" activeClassName=\"navlinkSelected\" exact>\n      <img src={HomeIcon} alt=\"Home Icon\" />\n      <p>Home</p>\n    </NavLink>\n    <NavLink to=\"/about\" activeClassName=\"navlinkSelected\" exact>\n      <img src={AboutIcon} alt=\"About Icon\" />\n      <p>About</p>\n    </NavLink>\n    <NavLink to=\"/portfolio\" activeClassName=\"navlinkSelected\" exact>\n      <img src={PortfolioIcon} alt=\"Portfolio Icon\" />\n      <p>Portfolio</p>\n    </NavLink>\n  </div>\n);\n\nexport default SideNavbar;\n","import React from 'react';\nimport './Project.scss';\nimport image1 from '../../images/RandomIcons/colony.svg';\nimport image2 from '../../images/RandomIcons/hand.svg';\nimport image4 from '../../images/RandomIcons/network.svg';\nimport image5 from '../../images/RandomIcons/project-management.svg';\nimport image6 from '../../images/RandomIcons/start-up.svg';\n\n\nfunction getBlockComponent(){\n  let rand = Math.floor(Math.random() * 5);\n  switch (rand) {\n    case 1:\n      return <img src={image1} alt=\"project icon\"></img>;\n    case 2:\n      return <img src={image2} alt=\"project icon\"></img>;\n    case 3:\n      return <img src={image4} alt=\"project icon\"></img>;\n    case 4:\n      return <img src={image5} alt=\"project icon\"></img>;\n    case 5:\n      return <img src={image6} alt=\"project icon\"></img>;\n    default:\n      return <img src={image2} alt=\"project icon\"></img>;\n\n  }\n}\nconst Project = props => (\n  <div className=\"Project\">\n     {getBlockComponent()}\n    <h4>{props.name} </h4>   \n    <p>{props.about}</p>\n  </div>\n);\n\nexport default Project;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Project from '../../components/Project/Project';\nimport axios from 'axios';\nimport './PortfolioScreen.scss';\n\n\nclass PortfolioScreen extends Component {\n  state = {\n    projects: [],\n    projectsData: []\n  };\n\n\n\n  async componentDidMount() {\n    // Render the projects and fetch the data here via axios\n    let projectsData = [];\n    if (localStorage.getItem('projectsData') !== \"\"){\n       //Fetch data from your api\n      const res = await axios.get('https://api.github.com/users/hasham7861/repos')\n      projectsData = res.data; \n      this.setState({projectsData});\n      localStorage.setItem('projectsData',JSON.stringify(projectsData));\n    } \n    else{\n      projectsData = JSON.parse(localStorage.getItem('projectsData'));\n    }\n    \n    const projects = [];\n    \n    for (let i = 0; i < this.state.projectsData.length; i++) {\n      let project = this.state.projectsData[i];\n\n      // set up the project route\n      const projectRoute = `/project/${project.name}`;\n      \n      // taking only the data that I need\n      let projectData =  {\n          projectName: project.name,\n          projectDesc: project.description,\n          numOfFavorites: project.watchers_count,\n          languages: project.language,\n          srcLink: project.html_url\n      };\n      \n\n      // Change project screen data based on the clicked project\n      let changeProjectData = (projectData) => {\n        localStorage.setItem('projectData', JSON.stringify(projectData));\n      }\n\n      const projectJSX = (\n        <NavLink className=\"ProjectLink\" to={projectRoute} onClick={() => changeProjectData(projectData)}>\n          <Project name={projectData.projectName} about={projectData.projectDesc} />\n        </NavLink >\n      );\n\n      projects.push(projectJSX);\n    }\n\n    this.setState({\n      projects,\n    });\n  }\n\n  render() {\n\n    return (\n      <div className=\"PortfolioScreen\">\n         <h1 className=\"header\">My Portfolio</h1>\n        <div className=\"PortfolioContainer\">\n          <ul>\n            {this.state.projects.map((project, index) => (\n              <li key={index}>{project}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default PortfolioScreen;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.scss';\n\nimport HomeScreen from './containers/HomeScreen/HomeScreen';\nimport InvalidRoute from './components/InvalidRoute/InvalidRoute';\nimport ProjectScreen from './containers/ProjectScreen/ProjectScreen';\nimport AboutScreen from './containers/AboutScreen/AboutScreen';\nimport SideNavbar from './components/SideNavbar/SideNavbar';\nimport PortfolioScreen from './containers/PortfolioScreen/PortfolioScreen';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div className='DesktopScreen'>\n            <div className=\"SideBar\">\n              <SideNavbar />\n            </div>\n            <Switch className='Content'>\n              <Route path=\"/\" exact component={HomeScreen} />\n              <Route path=\"/about\" exact component={AboutScreen} />\n              \n              <Route path=\"/portfolio\" exact component={PortfolioScreen} />\n              <Route path=\"/project/:name/\" exact component={ProjectScreen} />\n              <Route component={InvalidRoute} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}