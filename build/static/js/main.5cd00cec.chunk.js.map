{"version":3,"sources":["images/HomeIcon.svg","images/AboutIcon.svg","images/ContactIcon.svg","images/NavbarSeprator.svg","images/SocialMediaIcons/GithubIcon.svg","images/SocialMediaIcons/LinkedinIcon.svg","images/MyFace.jpg","images/SkillsSetIcons/JSIcon.svg","images/SkillsSetIcons/ReactIcon.svg","images/SkillsSetIcons/ReduxIcon.svg","images/SkillsSetIcons/MySqlIcon.svg","images/SkillsSetIcons/NodeIcon.svg","images/SkillsSetIcons/AdobeXDIcon.svg","documents/Hasham_Alam_Resume.pdf","images/PortfolioIcon.svg","store/reducers/emailMessage.js","store/constants/actionTypes.js","store/reducers/portfolio.js","store/reducers/heading.js","store/reducers/projects.js","store/reducers/combineReducers.js","store/store.js","components/PagesNavbar/PagesNavbar.js","containers/ContactScreen/ContactScreen.js","store/actions/actions.js","components/Heading/Heading.js","components/Project/Project.js","containers/Projects/Projects.js","containers/Portfolio/Portfolio.js","components/HomeNavBar/HomeNavBar.js","containers/HomeScreen/HomeScreen.js","components/InvalidRoute/InvalidRoute.js","components/ProjectNavbar/ProjectNavbar.js","containers/ProjectScreen/ProjectScreen.js","containers/AboutScreen/AboutScreen.js","components/SideNavbar/SideNavbar.js","containers/PortfolioScreen/PortfolioScreen.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","intialState","email","subject","message","emailMessage","state","arguments","length","undefined","action","type","Object","assign","intialPortfolioState","portfolioHeaderStyle","lineHeight","cursor","position","bottom","left","right","portfolioHeaderState","contactButtonStyleClasses","swipeArrow","swipeText","portfolioMove","objectSpread","portfolioState","intialHeadingState","headerStyle","paddingTop","headerState","classNames","headerStateChange","headingState","intialProjectsDivSite","style","height","projects","combineReducers","store","createStore","WebApp","window","__REDUX_DEVTOOLS_EXTENSION__","PagesNavbar","react_default","a","createElement","className","react_router_dom","to","src","HomeIcon","alt","NavbarSeprator","activeClassName","AboutIcon","ContactIcon","ContactScreen","sendMessage","event","preventDefault","_this$props$emailMess","_this","props","validEmailAddr","RegExp","test","axios","post","then","res","alert","clearEmailForm","catch","err","console","log","Fragment","isMobile","components_PagesNavbar_PagesNavbar","onSubmit","this","bind","onChange","emailOnChange","name","placeholder","value","subjectOnChange","messageOnChange","href","target","rel","GithubIcon","LinkedinIcon","Component","connect","dispatch","Heading","ref","reference","Project","about","Projects","projectsData","projectName","projectDesc","numOfFavorites","languages","srcLink","_this2","_loop","i","project","projectRoute","concat","projectData","projectJSX","onClick","localStorage","setItem","JSON","stringify","changeProjectData","components_Project_Project","push","setState","map","index","key","Portfolio","portfolioHeader","React","createRef","portfolioHeaderMoveDistance","portfolioHeaderMaxMoveDistance","swipeDownAllowed","swipeUpAllowed","handleTouchStart","Math","floor","current","offsetTop","contactButtonRef","handleTouchEnd","portfolioClose","runDebug","clientHeight","getNewPortfolioState","getNewPortfolioStateAfterExpand","newPortfolioMoveState","getNewHeaderState","handleTouchMove","touchMoveEvent","changedTouches","clientY","newHeaderState","newProjectsState","projectsDivHeight","portfolioTextOffsetBottom","split","parseInt","headerStateReset","onTouchStart","onTouchMove","onTouchEnd","containers_Projects_Projects","HomeNavBar","HomeScreen","headingRef","components_Heading_Heading","headerClassNames","dist","components_HomeNavBar_HomeNavBar","containers_Portfolio_Portfolio","InvalidRoute","color","marginTop","react_router","ProjectNavbar","ProjectScreen","_ref","match","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","projectContributors","params","data","parse","getItem","components_ProjectNavbar_ProjectNavbar","AboutScreen","MyFace","JSIcon","ReactIcon","ReduxIcon","MySqlIcon","NodeIcon","AdobeXDIcon","MyResumePdf","SideNavbar","exact","PortfolioIcon","PortfolioScreen","App","isBrowser","components_SideNavbar_SideNavbar","path","component","Boolean","location","hostname","rootElement","document","getElementById","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5cd00cec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HomeIcon.e18c3252.svg\";","module.exports = __webpack_public_path__ + \"static/media/AboutIcon.944ba56a.svg\";","module.exports = __webpack_public_path__ + \"static/media/ContactIcon.6ca72c05.svg\";","module.exports = __webpack_public_path__ + \"static/media/NavbarSeprator.a8db1499.svg\";","module.exports = __webpack_public_path__ + \"static/media/GithubIcon.b74ac31b.svg\";","module.exports = __webpack_public_path__ + \"static/media/LinkedinIcon.09a40be4.svg\";","module.exports = __webpack_public_path__ + \"static/media/MyFace.dddc4114.jpg\";","module.exports = __webpack_public_path__ + \"static/media/JSIcon.674e0518.svg\";","module.exports = __webpack_public_path__ + \"static/media/ReactIcon.1b1db9ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/ReduxIcon.d95c6de6.svg\";","module.exports = __webpack_public_path__ + \"static/media/MySqlIcon.1a39116d.svg\";","module.exports = __webpack_public_path__ + \"static/media/NodeIcon.dbe6544d.svg\";","module.exports = __webpack_public_path__ + \"static/media/AdobeXDIcon.3070679a.svg\";","module.exports = __webpack_public_path__ + \"static/media/Hasham_Alam_Resume.621bcffb.pdf\";","module.exports = __webpack_public_path__ + \"static/media/PortfolioIcon.6fe362ec.svg\";","import {\r\n  SAVE_EMAIL,\r\n  SAVE_SUBJECT,\r\n  SAVE_MESSAGE,\r\n  CLEAR_EMAIL_FORM,\r\n} from '../constants/actionTypes';\r\n/* Intial States */\r\nconst intialState = {\r\n  email: '',\r\n  subject: '',\r\n  message: '',\r\n};\r\n\r\nconst emailMessage = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case SAVE_EMAIL:\r\n      return Object.assign({}, state, {\r\n        email: action.email,\r\n        subject: state.subject,\r\n        message: state.message,\r\n      });\r\n    case SAVE_SUBJECT:\r\n      return Object.assign({}, state, {\r\n        email: state.email,\r\n        subject: action.subject,\r\n        message: state.message,\r\n      });\r\n    case SAVE_MESSAGE:\r\n      return Object.assign({}, state, {\r\n        email: state.email,\r\n        subject: state.subject,\r\n        message: action.message,\r\n      });\r\n    case CLEAR_EMAIL_FORM:\r\n      return intialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default emailMessage;\r\n","/*Action Types*/\r\n\r\nexport const SAVE_EMAIL = \"SAVE_EMAIL\";\r\nexport const SAVE_SUBJECT = \"SAVE_SUBJECT\";\r\nexport const SAVE_MESSAGE = \"SAVE_MESSAGE\";\r\nexport const CLEAR_EMAIL_FORM = \"CLEAR_EMAIL_FORM\";\r\n\r\nexport const CHANGE_PORTFOLIO_STATE = \"CHANGE_PORTFOLIO_STATE\";\r\n\r\nexport const CHANGE_HEADING_SIZE = \"CHANGE_HEADING_SIZE\";\r\nexport const RESET_HEADING_SIZE = \"RESET_HEADING_SIZE\";\r\nexport const CLOSE_PORTFOLIO = \"CLOSE_PORTFOLIO\";\r\n\r\nexport const EXPAND_PORTFOLIO_DIV = \"EXPAND_PORTFOLIO_DIV\";\r\n\r\n","import {\tCHANGE_PORTFOLIO_STATE, CLOSE_PORTFOLIO } from'../constants/actionTypes';\r\n\r\n/*Intial States*/\r\nconst intialPortfolioState = {\r\n  portfolioHeaderStyle: {\r\n    lineHeight: '0.2em',\r\n    cursor: 'grab',\r\n    position: 'absolute',\r\n    bottom: '2em',\r\n    left:'0',\r\n    right:'0'\r\n  },\r\n  portfolioHeaderState: \"Close\",\r\n  contactButtonStyleClasses: \"Contact\",\r\n  swipeArrow: \"▲\",\r\n  swipeText: \"Swipe Up To Expand Portfolio\"\r\n}\r\n\r\n/*Creating Reducers*/\r\nconst portfolioMove = (state = intialPortfolioState, action) => {\r\n \tswitch(action.type){\r\n\t\tcase CHANGE_PORTFOLIO_STATE:\r\n      // Update the dive to peek a little\r\n\t\t\treturn Object.assign({}, state, {\r\n        portfolioHeaderStyle:{\r\n          ...intialPortfolioState.portfolioHeaderStyle,\r\n          bottom: action.portfolioState.portfolioHeaderStyle.bottom,\r\n          position:action.portfolioState.portfolioHeaderStyle.position\r\n        },\r\n        portfolioHeaderState: action.portfolioState.portfolioHeaderState,\r\n        contactButtonStyleClasses: action.portfolioState.contactButtonStyleClasses,\r\n        swipeArrow: action.portfolioState.swipeArrow,\r\n        swipeText: action.portfolioState.swipeText\r\n      })\r\n    case CLOSE_PORTFOLIO:\r\n      return intialPortfolioState\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n};\r\n\r\nexport default portfolioMove;\r\n","import { CHANGE_HEADING_SIZE, RESET_HEADING_SIZE } from '../constants/actionTypes'\r\n\r\nconst intialHeadingState = {\r\n  headerStyle: {\r\n    paddingTop: '100px'\r\n  },\r\n  headerState:'BIG',\r\n  classNames: 'heading'\r\n}\r\nconst headerStateChange = (state = intialHeadingState, action) => {\r\n  switch (action.type){\r\n    case CHANGE_HEADING_SIZE:\r\n        return Object.assign({}, state, {\r\n            headerStyle: {\r\n              //  Changing size of header when swiping up\r\n              paddingTop: action.headingState.headerStyle.paddingTop,\r\n            },\r\n            headerState: action.headingState.headerState,\r\n            classNames: action.headingState.classNames\r\n          })\r\n    case RESET_HEADING_SIZE:\r\n          return intialHeadingState\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default headerStateChange;\r\n","import { EXPAND_PORTFOLIO_DIV} from '../constants/actionTypes';\r\n\r\nconst intialProjectsDivSite = {\r\n  style: {\r\n    height: '70px',\r\n  },\r\n};\r\n\r\nconst projects = (state = intialProjectsDivSite, action) => {\r\n  switch (action.type) {\r\n    case EXPAND_PORTFOLIO_DIV:\r\n      return Object.assign({}, state, {\r\n        style: {\r\n          height: action.portfolioState.style.height,\r\n        },\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projects;\r\n","import { combineReducers } from 'redux';\r\nimport emailMessage from './emailMessage';\r\nimport portfolioMove from './portfolio';\r\nimport headerStateChange from './heading.js';\r\nimport projects from './projects.js';\r\n\r\nexport default combineReducers({\r\n  portfolioMove,\r\n  emailMessage,\r\n  headerStateChange,\r\n  projects\r\n});\r\n","import { createStore } from 'redux';\r\nimport WebApp from './reducers/combineReducers';\r\n\r\n// Takes care of the dataflow from actions dispatched to store to reducers\r\nconst store = createStore(\r\n  WebApp, /* preloadedState, */\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './PagesNavbar.scss';\r\nimport HomeIcon from '../../images/HomeIcon.svg';\r\nimport AboutIcon from '../../images/AboutIcon.svg';\r\nimport ContactIcon from '../../images/ContactIcon.svg';\r\nimport NavbarSeprator from '../../images/NavbarSeprator.svg';\r\n\r\nconst PagesNavbar = () => (\r\n  <div className=\"PagesNavbar\">\r\n    <NavLink to=\"/\">\r\n      <img src={HomeIcon} alt=\"Home Icon\" />\r\n    </NavLink>\r\n    <img src={NavbarSeprator} alt=\"alt seprator\" />\r\n    <NavLink to=\"/about\" activeClassName=\"NavLinkActive\">\r\n      <img src={AboutIcon} alt=\"About Icon\" />\r\n    </NavLink>\r\n    <img src={NavbarSeprator} alt=\"alt seprator\" />\r\n    <NavLink to=\"/contact\" activeClassName=\"NavLinkActive\">\r\n      <img src={ContactIcon} alt=\"Contact Icon\" />\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default PagesNavbar;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ContactScreen.scss';\r\nimport { isMobile } from 'react-device-detect';\r\nimport axios from 'axios';\r\nimport {\r\n  saveEmail,\r\n  saveSubject,\r\n  saveMessage,\r\n  clearEmailForm,\r\n} from '../../store/actions/actions';\r\nimport PagesNavbar from '../../components/PagesNavbar/PagesNavbar';\r\nimport GithubIcon from '../../images/SocialMediaIcons/GithubIcon.svg';\r\nimport LinkedinIcon from '../../images/SocialMediaIcons/LinkedinIcon.svg';\r\n\r\nclass ContactScreen extends Component {\r\n  sendMessage = event => {\r\n    event.preventDefault(); // prevent the page from refreshing everytime\r\n    const { email, subject, message } = this.props.emailMessage;\r\n    const validEmailAddr = new RegExp(\r\n      '^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,6}$'\r\n    );\r\n\r\n    const endPoint = 'https://api.hashamalam.dev/routes/email';\r\n    // const endPoint = 'http://localhost:5000/routes/email';\r\n\r\n    if (email !== '' && subject !== '' && message !== '') {\r\n      if (validEmailAddr.test(email)) {\r\n        // console.log(\"Valid Email\");\r\n        axios.post(endPoint, { email, subject, message })\r\n          .then(res => {\r\n            // console.log(res.data[0].Message);\r\n            alert('Email is sent');\r\n            this.props.clearEmailForm();\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            alert('Email not sent');\r\n          });\r\n      } else {\r\n        alert('Enter in a valid email');\r\n      }\r\n    } else {\r\n      alert('Email form is not completed');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {isMobile ? <PagesNavbar /> : ''}\r\n        <div className=\"ContactScreen\">\r\n          <h3>Email</h3>\r\n          <form onSubmit={this.sendMessage.bind(this)}>\r\n            <input\r\n              onChange={this.props.emailOnChange}\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Enter in your Email..\"\r\n              value={this.props.emailMessage.email}\r\n            />\r\n            <input\r\n              onChange={this.props.subjectOnChange}\r\n              type=\"text\"\r\n              name=\"subject\"\r\n              placeholder=\"Enter in the Subject..\"\r\n              value={this.props.emailMessage.subject}\r\n            />\r\n            <textarea\r\n              onChange={this.props.messageOnChange}\r\n              name=\"message\"\r\n              placeholder=\"Enter in your Message.. \"\r\n              value={this.props.emailMessage.message}\r\n            />\r\n            <button type=\"submit\">Send Message</button>\r\n          </form>\r\n          <h3>Follow me Here</h3>\r\n          <div className=\"contactBar\">\r\n            <a\r\n              href=\"https://github.com/hasham7861\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <img src={GithubIcon} alt=\"Github Icon\" />\r\n            </a>\r\n            <a\r\n              href=\"https://www.linkedin.com/in/hasham7861/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <img src={LinkedinIcon} alt=\"Linkedin Icon\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// The state that we need to retrieve from the store\r\nconst mapStateToProps = state => ({\r\n  emailMessage: state.emailMessage,\r\n});\r\n\r\n// The type of actions we want to dispatch in this container\r\nconst mapDispatchToProps = dispatch => ({\r\n  emailOnChange: event => dispatch(saveEmail(event.target.value)),\r\n  subjectOnChange: event => dispatch(saveSubject(event.target.value)),\r\n  messageOnChange: event => dispatch(saveMessage(event.target.value)),\r\n  clearEmailForm: () => dispatch(clearEmailForm()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ContactScreen);\r\n","import {\r\n\tSAVE_EMAIL,\r\n\tSAVE_SUBJECT,\r\n\tSAVE_MESSAGE,\r\n\tCLEAR_EMAIL_FORM,\r\n\tCHANGE_PORTFOLIO_STATE,\r\n\tCHANGE_HEADING_SIZE,\r\n\tCLOSE_PORTFOLIO,\r\n\tEXPAND_PORTFOLIO_DIV,\r\n\tRESET_HEADING_SIZE,\r\n}\tfrom '../constants/actionTypes';\r\n\r\n// The following actions are possible on emailMessage\r\nexport const saveEmail = email => ({\r\n\ttype:SAVE_EMAIL,\r\n\temail\r\n});\r\nexport const saveSubject = subject => ({\r\n\ttype: SAVE_SUBJECT,\r\n\tsubject\r\n});\r\nexport const saveMessage = message => ({\r\n\ttype: SAVE_MESSAGE,\r\n\tmessage\r\n});\r\nexport const clearEmailForm = () =>({\r\n\ttype: CLEAR_EMAIL_FORM,\r\n});\r\nexport const changePortfolioState = portfolioState => ({\r\n\ttype: CHANGE_PORTFOLIO_STATE,\r\n\tportfolioState\r\n});\r\n\r\nexport const changeHeadingSize = headingState => ({\r\n\ttype: CHANGE_HEADING_SIZE,\r\n\theadingState\r\n});\r\n\r\nexport const closePortfolio = () => ({\r\n\ttype: CLOSE_PORTFOLIO,\r\n});\r\n\r\nexport const expandPortfolioDiv = (portfolioState) => ({\r\n\ttype: EXPAND_PORTFOLIO_DIV,\r\n\tportfolioState\r\n})\r\n\r\nexport const resetHeadingSize = () => ({\r\n\ttype: RESET_HEADING_SIZE\r\n})\r\n","import React from 'react';\r\nimport './Heading.scss';\r\n\r\nconst Heading = props => (\r\n  <div ref={props.reference} className={props.classNames}>\r\n    <h1>Hasham</h1>\r\n    <h1>Alam</h1>\r\n    <h3>&lt; Aspiring Web Developer /&gt;</h3>\r\n  </div>\r\n);\r\n\r\nexport default Heading;\r\n","import React from 'react';\r\nimport './Project.scss';\r\n\r\nconst Project = props => (\r\n  <div className=\"Project\">\r\n    <h4>{props.name} </h4>\r\n    <p>{props.about}</p>\r\n  </div>\r\n);\r\n\r\nexport default Project;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './Projects.scss';\r\nimport Project from '../../components/Project/Project';\r\n\r\nclass Projects extends Component {\r\n  state = {\r\n    // Hardcoded Project Names\r\n    projects: [],\r\n    projectsData: [\r\n      {\r\n        \"projectName\": \"PersonalWebsiteV2\",\r\n        \"projectDesc\": \"Redesigning Personal Website and Automating Portfolio (Prototype)\",\r\n        \"numOfFavorites\": \"1\",\r\n        \"languages\": \"Javascript\",\r\n        \"srcLink\": \"https://github.com/hasham7861/PersonalWebsiteV2\"\r\n      },\r\n      {\r\n        \"projectName\": \"LandingPage\",\r\n        \"projectDesc\": \"Created a Landing Page using Sass\",\r\n        \"numOfFavorites\": \"0\",\r\n        \"languages\": \"CSS\",\r\n        \"srcLink\": \"https://github.com/hasham7861/LandingPage\"\r\n      }, {\r\n        \"projectName\": \"Asteroid-Game\",\r\n        \"projectDesc\": \"Asteroid Game made on canvas using the zim.js framework\",\r\n        \"numOfFavorites\": \"0\",\r\n        \"languages\": \"HTML\",\r\n        \"srcLink\": \"https://github.com/hasham7861/AsteroidGame\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    const projects = [];\r\n\r\n    for (let i = 0; i < this.state.projectsData.length; i++) {\r\n      let project = this.state.projectsData[i];\r\n      const projectRoute = `/project/${project.projectName}`;\r\n      \r\n      const projectData =  {\r\n          projectName: project.projectName,\r\n          projectDesc: project.projectDesc,\r\n          numOfFavorites: project.numOfFavorites,\r\n          languages: project.languages,\r\n          srcLink: project.srcLink\r\n      };\r\n      \r\n\r\n      // Change project screen data based on the clicked project\r\n      let changeProjectData = (projectData) => {\r\n        localStorage.setItem('projectData', JSON.stringify(projectData));\r\n      }\r\n\r\n      const projectJSX = (\r\n        <NavLink className=\"ProjectLink\" to={projectRoute} onClick={() => changeProjectData(projectData)}>\r\n          <Project name={project.projectName} about={project.projectDesc} />\r\n        </NavLink >\r\n      );\r\n\r\n      projects.push(projectJSX);\r\n    }\r\n\r\n    this.setState({\r\n      projects,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ProjectsBackDrop\" style={this.props.style}>\r\n        <div className=\"ProjectsContainer\">\r\n          <ul>\r\n            {this.state.projects.map((project, index) => (\r\n              <li key={index}>{project}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  style: state.projects.style,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Projects);\r\n","/* eslint-disable react/prop-types */\r\n/* eslint-disable react/destructuring-assignment */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  changePortfolioState,\r\n  changeHeadingSize,\r\n  closePortfolio,\r\n  expandPortfolioDiv,\r\n  resetHeadingSize,\r\n} from '../../store/actions/actions';\r\nimport Projects from '../Projects/Projects';\r\n\r\nclass Portfolio extends Component {\r\n  portfolioHeader = React.createRef();\r\n\r\n  portfolioHeaderMoveDistance = 0;\r\n\r\n  portfolioHeaderMaxMoveDistance = 1;\r\n\r\n  swipeDownAllowed = false;\r\n\r\n  swipeUpAllowed = true;\r\n\r\n  // The following touch events only work with TOUCH BASED DEVICES\r\n  handleTouchStart = () => {\r\n    // Only declare the distance once on start from expand portfolio text to contact button\r\n    this.portfolioHeaderMaxMoveDistance = Math.floor(\r\n      (this.portfolioHeader.current.offsetTop -\r\n        this.props.contactButtonRef.current.offsetTop) /\r\n        2\r\n    );\r\n\r\n    // Allowed to only swipe down once the portfolio is expanded\r\n    if (this.props.portfolioHeaderState === 'Expand') {\r\n      this.swipeDownAllowed = true;\r\n      this.swipeUpAllowed = false;\r\n    } else {\r\n      this.swipeDownAllowed = false;\r\n      this.swipeUpAllowed = true;\r\n    }\r\n  };\r\n\r\n  handleTouchEnd = () => {\r\n    if (this.props.portfolioHeaderState === 'MidExpand') {\r\n      this.props.portfolioClose();\r\n      this.props.projects({\r\n        style: { height: '40px' },\r\n      });\r\n    }\r\n  };\r\n\r\n  runDebug = () => {\r\n    console.log('---/Debug/---');\r\n    // console.log(this.props.headingRef.current.children[0].childNodes);\r\n    // console.log(\"HeaderOffset: \"+this.props.headingRef.current.offsetTop);\r\n    // console.log(\"ContactButtonOffset: \"+this.props.contactButtonRef.current.offsetTop);\r\n    console.log(\r\n      `PortfolioTextOffsetTop: ${this.portfolioHeader.current.offsetTop}`\r\n    );\r\n    console.log(\r\n      `PortfolioTextOffsetBottom: ${this.portfolioHeader.current.offsetTop -\r\n        this.portfolioHeader.current.clientHeight}`\r\n    );\r\n    // console.log(\"portfolioHeaderMoveDistance: \" + this.portfolioHeaderMoveDistance);\r\n    // console.log(\"portfolioHeaderMaxMoveDistance: \"+ this.portfolioHeaderMaxMoveDistance);\r\n    console.log(`PortfolioHeaderState: ${this.props.portfolioHeaderState}`);\r\n  };\r\n\r\n  getNewPortfolioState = () => ({\r\n    portfolioHeaderStyle: {\r\n      bottom: `${this.portfolioHeaderMoveDistance}px`,\r\n      position: 'absolute',\r\n    },\r\n    portfolioHeaderState: 'MidExpand',\r\n    contactButtonStyleClasses: 'Contact',\r\n    swipeArrow: '▲',\r\n    swipeText: 'Swipe Up To Expand Portfolio',\r\n  });\r\n\r\n  getNewPortfolioStateAfterExpand = newPortfolioMoveState => ({\r\n    portfolioHeaderStyle: {\r\n      ...newPortfolioMoveState.portfolioHeaderStyle,\r\n      position: 'absolute',\r\n      bottom: 0,\r\n    },\r\n    portfolioHeaderState: 'Expand',\r\n    contactButtonStyleClasses: (newPortfolioMoveState.contactButtonStyleClasses +=\r\n      ' expandPortfolioContactButton'),\r\n    swipeArrow: '▼',\r\n    swipeText: 'Swipe Down To Collapse Portfolio',\r\n  });\r\n\r\n  getNewHeaderState = () => ({\r\n    headerStyle: {\r\n      paddingTop: `${0}px`,\r\n    },\r\n    headerState: 'BIG',\r\n  });\r\n\r\n  handleTouchMove = touchMoveEvent => {\r\n    // this.runDebug();\r\n\r\n    // console.log(shouldSwipeUp);\r\n    // SwipeUP: Change the state, only if the header is within this range of y value\r\n    if (\r\n      this.swipeUpAllowed &&\r\n      this.props.portfolioHeaderState !== 'Expand' &&\r\n      this.portfolioHeaderMoveDistance >= 0 &&\r\n      this.portfolioHeader.current.offsetTop >=\r\n        touchMoveEvent.changedTouches[0].clientY\r\n    ) {\r\n      // SwipeUpToExpandPortfolio Text dyanmic default header position\r\n      this.portfolioHeaderMoveDistance = Math.floor(\r\n        this.portfolioHeader.current.offsetTop -\r\n          touchMoveEvent.changedTouches[0].clientY\r\n      );\r\n\r\n      // New portfoilioText state for redux store\r\n      let newPortfolioMoveState = this.getNewPortfolioState();\r\n      // New Heading state for redux store\r\n      const newHeaderState = this.getNewHeaderState();\r\n      const newProjectsState = {\r\n        style: {\r\n          height: this.props.projectsDivHeight,\r\n        },\r\n      };\r\n      // SWIPEUP: Once I have reached the maxoffset, set the portfolio to leave as expanded\r\n      const shouldExpand =\r\n        this.portfolioHeaderMoveDistance >= this.portfolioHeaderMaxMoveDistance;\r\n\r\n      if (shouldExpand) {\r\n        // Update the heading state once portfolio expands\r\n        newHeaderState.classNames += ' expandPortfolio';\r\n        this.props.headerStateChange(newHeaderState);\r\n\r\n        // Updated State once the portfolio expands\r\n        newPortfolioMoveState = this.getNewPortfolioStateAfterExpand(\r\n          newPortfolioMoveState\r\n        );\r\n\r\n        const portfolioTextOffsetBottom =\r\n          this.portfolioHeader.current.offsetTop -\r\n          this.portfolioHeader.current.clientHeight;\r\n        const projectsDivHeight = this.props.projectsDivHeight.split('px')[0];\r\n        newProjectsState.style.height = `${parseInt(\r\n          portfolioTextOffsetBottom - projectsDivHeight\r\n        )}px`;\r\n      }\r\n\r\n      //   // Setting the height of the projects div\r\n      // console.log('Swipe Down');\r\n      this.props.projects(newProjectsState);\r\n      this.props.portfolioMove(newPortfolioMoveState);\r\n    } else if (this.swipeDownAllowed) {\r\n      if (\r\n        touchMoveEvent.changedTouches[0].clientY -\r\n          this.portfolioHeader.current.offsetTop >=\r\n        0\r\n      ) {\r\n        this.props.portfolioClose();\r\n        this.props.headerStateReset();\r\n        this.props.projects({\r\n          style: { height: '40px' },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={this.portfolioHeader}\r\n        className=\"portfolio\"\r\n        style={this.props.portfolioHeaderStyle}\r\n      >\r\n        <div\r\n          onTouchStart={() => this.handleTouchStart()}\r\n          onTouchMove={touchMoveEvent => this.handleTouchMove(touchMoveEvent)}\r\n          onTouchEnd={() => this.handleTouchEnd()}\r\n        >\r\n          <h2 className=\"upArrow\">{this.props.swipeArrow}</h2>\r\n          <h4>{this.props.swipeText}</h4>\r\n        </div>\r\n        {this.props.portfolioHeaderState === 'Expand' ? <Projects /> : ''}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  portfolioHeaderStyle: state.portfolioMove.portfolioHeaderStyle,\r\n  portfolioHeaderState: state.portfolioMove.portfolioHeaderState,\r\n  headerStyle: state.headerStateChange.headerStyle,\r\n  headerState: state.headerStateChange.headerState,\r\n  swipeArrow: state.portfolioMove.swipeArrow,\r\n  swipeText: state.portfolioMove.swipeText,\r\n  projectsDivHeight: state.projects.style.height, // changing the size of the projectsDiv\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  portfolioMove: newHeaderState =>\r\n    dispatch(changePortfolioState(newHeaderState)),\r\n  portfolioClose: () => dispatch(closePortfolio()),\r\n  headerStateChange: newHeaderState =>\r\n    dispatch(changeHeadingSize(newHeaderState)),\r\n  headerStateReset: () => dispatch(resetHeadingSize()),\r\n  projects: newProjectsState => dispatch(expandPortfolioDiv(newProjectsState)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Portfolio);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './HomeNavBar.scss';\r\nimport AboutIcon from '../../images/AboutIcon.svg';\r\nimport ContactIcon from '../../images/ContactIcon.svg';\r\nimport NavbarSeprator from '../../images/NavbarSeprator.svg';\r\n\r\nconst HomeNavBar = () => (\r\n  <div className=\"HomeNavbar\">\r\n    <Link to=\"/About\">\r\n      <img src={AboutIcon} alt=\"About Icon\" />\r\n    </Link>\r\n    <img src={NavbarSeprator} alt=\"Navbar Seprator\" />\r\n    <Link to=\"/Contact\">\r\n      <img src={ContactIcon} alt=\"Contact Icon\" />\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default HomeNavBar;\r\n","import React, { Component } from 'react';\r\nimport { MobileView } from 'react-device-detect';\r\nimport './HomeScreen.scss';\r\nimport { connect } from 'react-redux';\r\nimport Heading from '../../components/Heading/Heading';\r\nimport Portfolio from '../Portfolio/Portfolio';\r\nimport HomeNavBar from '../../components/HomeNavBar/HomeNavBar';\r\n\r\nclass HomeScreen extends Component {\r\n  headingRef = React.createRef();\r\n\r\n  contactButtonRef = React.createRef();\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <Heading classNames={this.props.headerClassNames} />\r\n        <MobileView>\r\n          <div ref={this.contactButtonRef}>\r\n            <HomeNavBar />\r\n          </div>\r\n          <Portfolio\r\n            headingRef={this.headingRef}\r\n            contactButtonRef={this.contactButtonRef}\r\n          />\r\n        </MobileView>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  headerStyle: state.headerStateChange.headerStyle,\r\n  headerClassNames: state.headerStateChange.classNames,\r\n});\r\n\r\nexport default connect(mapStateToProps)(HomeScreen);\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nconst InvalidRoute = () => (\r\n  <div>\r\n    <h1\r\n      style={{\r\n        color: 'white',\r\n        marginTop: 0,\r\n        paddingTop: '20px',\r\n        height: '100vh',\r\n      }}\r\n    >\r\n      <Redirect push to=\"/\"/>\r\n    </h1>\r\n  </div>\r\n);\r\n\r\nexport default InvalidRoute;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './ProjectNavbar.scss';\r\nimport HomeIcon from '../../images/HomeIcon.svg';\r\n\r\nconst ProjectNavbar = (props) => {\r\n    return (\r\n        <div className=\"ProjectNavbar\">\r\n           <NavLink to=\"/\" activeClassName=\"NavLinkActive\">\r\n                    <img src={HomeIcon} alt=\"HomeIconImage\"></img>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectNavbar;\r\n","import React, { Component } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport ProjectNavbar from '../../components/ProjectNavbar/ProjectNavbar';\r\nimport './ProjectScreen.scss';\r\n// import { connect } from 'react-redux';\r\n\r\nclass ProjectScreen extends Component {\r\n\r\n  projectName = '';\r\n  projectContributors = 'Hasham Alam';\r\n\r\n  constructor({ props, match }) {\r\n    super(props);\r\n    this.projectName = match.params.name;\r\n    this.state ={\r\n      projectData :{}\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const data = JSON.parse(localStorage.getItem('projectData'));\r\n    // console.log(data);\r\n    this.setState(\r\n      {\r\n        projectData:{\r\n          projectName: data.projectName,\r\n          projectDesc: data.projectDesc,\r\n          numOfFavorites:data.numOfFavorites,\r\n          languages:data.languages,\r\n          srcLink:data.srcLink \r\n        },\r\n      },\r\n    \r\n      )\r\n  }\r\n  \r\n\r\n  // fetch the data from redux and put it in here\r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n        {isMobile ? <ProjectNavbar projectRoute={this.projectName} /> : ''}\r\n        <div className=\"ProjectScreen\">\r\n          <h1>{this.projectName}</h1>\r\n          <section className=\"Description\">\r\n            <h3>Description</h3>\r\n            <p>{this.state.projectData.projectDesc}</p>\r\n          </section>\r\n          <section className=\"Languages\">\r\n            <h3>Languages(s)</h3>\r\n            <p>{this.state.projectData.languages}</p>\r\n          </section>\r\n          <section className=\"Contributors\">\r\n            <h3>Contributor(s)</h3>\r\n            <p>Hasham Alam</p>\r\n          </section>\r\n          <section>\r\n            <a href={this.state.projectData.srcLink}>\r\n              Click here for more details\r\n            </a>\r\n          </section>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default ProjectScreen;\r\n","import React, { Component } from 'react';\r\nimport { isMobile } from 'react-device-detect';\r\nimport './AboutScreen.scss';\r\nimport PagesNavbar from '../../components/PagesNavbar/PagesNavbar';\r\nimport MyFace from '../../images/MyFace.jpg';\r\nimport JSIcon from '../../images/SkillsSetIcons/JSIcon.svg';\r\nimport ReactIcon from '../../images/SkillsSetIcons/ReactIcon.svg';\r\nimport ReduxIcon from '../../images/SkillsSetIcons/ReduxIcon.svg';\r\nimport MySqlIcon from '../../images/SkillsSetIcons/MySqlIcon.svg';\r\nimport NodeIcon from '../../images/SkillsSetIcons/NodeIcon.svg';\r\nimport AdobeXDIcon from '../../images/SkillsSetIcons/AdobeXDIcon.svg';\r\nimport MyResumePdf from '../../documents/Hasham_Alam_Resume.pdf';\r\n\r\nclass AboutScreen extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {isMobile ? <PagesNavbar /> : ''}\r\n        <div className=\"AboutScreen\">\r\n          <div className=\"MyFace\">\r\n            <img src={MyFace} alt=\"My Face\" />\r\n          </div>\r\n          <section>\r\n            <h3>Area of Expertise</h3>\r\n            <p>Full Stack Web Developer</p>\r\n          </section>\r\n          <section>\r\n            <h3>What I have to Offer</h3>\r\n            <p>Design and Create Full Web Apps for your buisness</p>\r\n          </section>\r\n          <section>\r\n            <h3>My Skills</h3>\r\n            <div className=\"SkillsIconBar\">\r\n              <img src={JSIcon} alt=\"JavaScript Icon\" />\r\n              <img src={ReactIcon} alt=\"React Icon\" />\r\n              <img src={ReduxIcon} alt=\"Redux Icon\" />\r\n              <img src={MySqlIcon} alt=\"MySql Icon\" />\r\n              <img src={NodeIcon} alt=\"Node Icon\" />\r\n              <img src={AdobeXDIcon} alt=\"AdobeXd Icon\" />\r\n            </div>\r\n          </section>\r\n          <section>\r\n            <a href={MyResumePdf} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              View Resume\r\n            </a>\r\n          </section>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutScreen;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './SideNavbar.scss';\r\nimport HomeIcon from '../../images/HomeIcon.svg';\r\nimport AboutIcon from '../../images/AboutIcon.svg';\r\nimport ContactIcon from '../../images/ContactIcon.svg';\r\nimport PortfolioIcon from '../../images/PortfolioIcon.svg';\r\n\r\nconst SideNavbar = () => (\r\n  <div className=\"SideNavbar\">\r\n    <NavLink to=\"/\" activeClassName=\"navlinkSelected\" exact>\r\n      <img src={HomeIcon} alt=\"Home Icon\" />\r\n      <p>Home</p>\r\n    </NavLink>\r\n    <NavLink to=\"/about\" activeClassName=\"navlinkSelected\" exact>\r\n      <img src={AboutIcon} alt=\"About Icon\" />\r\n      <p>About</p>\r\n    </NavLink>\r\n    <NavLink to=\"/portfolio\" activeClassName=\"navlinkSelected\" exact>\r\n      <img src={PortfolioIcon} alt=\"Portfolio Icon\" />\r\n      <p>Portfolio</p>\r\n    </NavLink>\r\n    <NavLink to=\"/contact\" activeClassName=\"navlinkSelected\" exact>\r\n      <img src={ContactIcon} alt=\"Contact Icon\" /> <p>Contact</p>\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default SideNavbar;\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Project from '../../components/Project/Project';\r\nimport './PortfolioScreen.scss';\r\n\r\n\r\nclass PortfolioScreen extends Component {\r\n  state = {\r\n    // Hardcoded Project Names\r\n    projects: [],\r\n    projectsData: [\r\n      {\r\n        \"projectName\": \"PersonalWebsiteV2\",\r\n        \"projectDesc\": \"Redesigning Personal Website and Automating Portfolio (Prototype)\",\r\n        \"numOfFavorites\": \"1\",\r\n        \"languages\": \"Javascript\",\r\n        \"srcLink\": \"https://github.com/hasham7861/PersonalWebsiteV2\"\r\n      },\r\n      {\r\n        \"projectName\": \"LandingPage\",\r\n        \"projectDesc\": \"Created a Landing Page using Sass\",\r\n        \"numOfFavorites\": \"0\",\r\n        \"languages\": \"CSS\",\r\n        \"srcLink\": \"https://github.com/hasham7861/LandingPage\"\r\n      }, {\r\n        \"projectName\": \"Asteroid-Game\",\r\n        \"projectDesc\": \"Asteroid Game made on canvas using the zim.js framework\",\r\n        \"numOfFavorites\": \"0\",\r\n        \"languages\": \"HTML\",\r\n        \"srcLink\": \"https://github.com/hasham7861/AsteroidGame\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Render the projects and fetch the data here via axios\r\n    // Todo: Load Projects here via api call to github or database\r\n\r\n    const projects = [];\r\n\r\n    for (let i = 0; i < this.state.projectsData.length; i++) {\r\n      let project = this.state.projectsData[i];\r\n      const projectRoute = `/project/${project.projectName}`;\r\n      \r\n      const projectData =  {\r\n          projectName: project.projectName,\r\n          projectDesc: project.projectDesc,\r\n          numOfFavorites: project.numOfFavorites,\r\n          languages: project.languages,\r\n          srcLink: project.srcLink\r\n      };\r\n      \r\n\r\n      // Change project screen data based on the clicked project\r\n      let changeProjectData = (projectData) => {\r\n        localStorage.setItem('projectData', JSON.stringify(projectData));\r\n      }\r\n\r\n      const projectJSX = (\r\n        <NavLink className=\"ProjectLink\" to={projectRoute} onClick={() => changeProjectData(projectData)}>\r\n          <Project name={project.projectName} about={project.projectDesc} />\r\n        </NavLink >\r\n      );\r\n\r\n      projects.push(projectJSX);\r\n    }\r\n\r\n    this.setState({\r\n      projects,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PortfolioScreen\">\r\n        <h1>My Pinned Github Portfolio</h1>\r\n        <div className=\"PortfolioContainer\">\r\n          <ul>\r\n            {this.state.projects.map((project, index) => (\r\n              <li key={index}>{project}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default PortfolioScreen;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { BrowserView, isBrowser } from 'react-device-detect';\r\nimport './App.scss';\r\nimport ContactScreen from './containers/ContactScreen/ContactScreen';\r\nimport HomeScreen from './containers/HomeScreen/HomeScreen';\r\nimport InvalidRoute from './components/InvalidRoute/InvalidRoute';\r\nimport ProjectScreen from './containers/ProjectScreen/ProjectScreen';\r\nimport AboutScreen from './containers/AboutScreen/AboutScreen';\r\nimport SideNavbar from './components/SideNavbar/SideNavbar';\r\nimport PortfolioScreen from './containers/PortfolioScreen/PortfolioScreen';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Router>\r\n          <div className={isBrowser ? 'DesktopScreen' : ''}>\r\n            <BrowserView className=\"SideBar\">\r\n              <SideNavbar />\r\n            </BrowserView>\r\n            <Switch className={isBrowser ? 'Content' : ''}>\r\n              <Route path=\"/\" exact component={HomeScreen} />\r\n              <Route path=\"/about\" exact component={AboutScreen} />\r\n              <Route path=\"/contact\" exact component={ContactScreen} />\r\n              <Route path=\"/portfolio\" exact component={PortfolioScreen} />\r\n              <Route path=\"/project/:name/\" exact component={ProjectScreen} />\r\n              <Route component={InvalidRoute} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}